==67767== Memcheck, a memory error detector
==67767== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==67767== Using Valgrind-3.17.0-07f0cdcbb4-20210319X and LibVEX; rerun with -h for copyright info
==67767== Command: ./a.out
==67767== Parent PID: 26492
==67767== 
--67767-- 
--67767-- Valgrind options:
--67767--    --leak-check=full
--67767--    --show-leak-kinds=all
--67767--    --verbose
--67767--    --track-origins=yes
--67767--    --log-file=log
--67767-- Contents of /proc/version:
--67767--   Linux version 5.13.0-37-generic (buildd@lcy02-amd64-012) (gcc (Ubuntu 11.2.0-7ubuntu2) 11.2.0, GNU ld (GNU Binutils for Ubuntu) 2.37) #42-Ubuntu SMP Tue Mar 15 14:34:06 UTC 2022
--67767-- 
--67767-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--67767-- Page sizes: currently 4096, max supported 4096
--67767-- Valgrind library directory: /usr/libexec/valgrind
--67767-- Reading syms from /home/tseng/Works/leetCode/leetCode/a.out
--67767-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--67767--   Considering /usr/lib/debug/.build-id/12/5e7b6995156940f280c8db94f9abac502e6d10.debug ..
--67767--   .. build-id is valid
--67767-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--67767--    object doesn't have a symbol table
--67767--    object doesn't have a dynamic symbol table
--67767-- Scheduler: using generic scheduler lock implementation.
--67767-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==67767== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-67767-by-tseng-on-???
==67767== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-67767-by-tseng-on-???
==67767== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-67767-by-tseng-on-???
==67767== 
==67767== TO CONTROL THIS PROCESS USING vgdb (which you probably
==67767== don't want to do, unless you know exactly what you're doing,
==67767== or are doing some strange experiment):
==67767==   /usr/bin/vgdb --pid=67767 ...command...
==67767== 
==67767== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==67767==   /path/to/gdb ./a.out
==67767== and then give GDB the following command
==67767==   target remote | /usr/bin/vgdb --pid=67767
==67767== --pid is optional if only one valgrind process is running
==67767== 
--67767-- REDIR: 0x4028150 (ld-linux-x86-64.so.2:strlen) redirected to 0x580bd4c2 (???)
--67767-- REDIR: 0x4027f20 (ld-linux-x86-64.so.2:index) redirected to 0x580bd4dc (???)
--67767-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--67767--    object doesn't have a symbol table
--67767-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
--67767--    object doesn't have a symbol table
==67767== WARNING: new redirection conflicts with existing -- ignoring it
--67767--     old: 0x04028150 (strlen              ) R-> (0000.0) 0x580bd4c2 ???
--67767--     new: 0x04028150 (strlen              ) R-> (2007.0) 0x04849d70 strlen
--67767-- REDIR: 0x4024930 (ld-linux-x86-64.so.2:strcmp) redirected to 0x484ac10 (strcmp)
--67767-- REDIR: 0x40286b0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x484e780 (mempcpy)
--67767-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--67767--   Considering /usr/lib/debug/.build-id/f0/fc29165cbe6088c0e1adf03b0048fbecbc003a.debug ..
--67767--   .. build-id is valid
--67767-- REDIR: 0x4916d90 (libc.so.6:strnlen) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917050 (libc.so.6:strpbrk) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916950 (libc.so.6:strcmp) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4934e70 (libc.so.6:wcsnlen) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917cc0 (libc.so.6:memset) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x49336e0 (libc.so.6:wcslen) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4918200 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4933510 (libc.so.6:wcschr) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x49168d0 (libc.so.6:index) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916fd0 (libc.so.6:rindex) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917b90 (libc.so.6:memmove) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
==67767== Preferring higher priority redirection:
--67767--     old: 0x04a0dfe0 (__memcpy_avx_unalign) R-> (2018.0) 0x0484bed0 __memcpy_avx_unaligned_erms
--67767--     new: 0x04a0dfe0 (__memcpy_avx_unalign) R-> (2018.1) 0x0484d7c0 memmove
--67767-- REDIR: 0x4933590 (libc.so.6:wcscmp) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917fd0 (libc.so.6:stpncpy) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4933b50 (libc.so.6:wmemchr) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916ea0 (libc.so.6:strncmp) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4918060 (libc.so.6:strcasecmp) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916a90 (libc.so.6:strcspn) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4933610 (libc.so.6:wcscpy) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916840 (libc.so.6:strcat) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4918150 (libc.so.6:strncasecmp_l) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917af0 (libc.so.6:bcmp) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x491fb30 (libc.so.6:memrchr) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4919610 (libc.so.6:strchrnul) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916a00 (libc.so.6:strcpy) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4918100 (libc.so.6:strcasecmp_l) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916d10 (libc.so.6:strlen) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4916f40 (libc.so.6:strncpy) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917f40 (libc.so.6:stpcpy) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917a60 (libc.so.6:memchr) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917170 (libc.so.6:strspn) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4917dc0 (libc.so.6:mempcpy) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x49180b0 (libc.so.6:strncasecmp) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4919580 (libc.so.6:rawmemchr) redirected to 0x483a1c0 (_vgnU_ifunc_wrapper)
--67767-- REDIR: 0x4a0ae70 (libc.so.6:__strrchr_avx2) redirected to 0x4849750 (rindex)
--67767-- REDIR: 0x49139b0 (libc.so.6:malloc) redirected to 0x48437c0 (malloc)
--67767-- REDIR: 0x4a0ac60 (libc.so.6:__strchrnul_avx2) redirected to 0x484e270 (strchrnul)
--67767-- REDIR: 0x4a0dfc0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x484e380 (mempcpy)
--67767-- REDIR: 0x4913cb0 (libc.so.6:free) redirected to 0x48461b0 (free)
==67767== 
==67767== HEAP SUMMARY:
==67767==     in use at exit: 0 bytes in 0 blocks
==67767==   total heap usage: 11 allocs, 11 frees, 1,184 bytes allocated
==67767== 
==67767== All heap blocks were freed -- no leaks are possible
==67767== 
==67767== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
